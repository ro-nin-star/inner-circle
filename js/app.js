// F≈ë alkalmaz√°s inicializ√°l√≥ √©s koordin√°tor
class PerfectCircleApp {
    constructor() {
        this.initialized = false;
        this.playerName = '';
    }
    
    async init() {
        if (this.initialized) {
            console.warn('Alkalmaz√°s m√°r inicializ√°lva');
            return;
        }
        
        console.log('üéÆ Perfect Circle alkalmaz√°s inicializ√°l√°sa...');
        
        try {
            // Alapvet≈ë inicializ√°l√°s
            this.loadPlayerName();
            this.updateStats();
            
            // L√°togat√°ssz√°ml√°l√≥ ind√≠t√°sa
            await VisitorCounter.init();
            
            // Leaderboard inicializ√°l√°sa
            LeaderboardManager.loadLocalLeaderboard();
            
            // Event listener-ek be√°ll√≠t√°sa
            this.setupEventListeners();
            
            // UI elemek inicializ√°l√°sa
            this.initializeUI();
            
            this.initialized = true;
            console.log('‚úÖ Perfect Circle alkalmaz√°s sikeresen inicializ√°lva');
            
        } catch (error) {
            console.error('‚ùå Alkalmaz√°s inicializ√°l√°si hiba:', error);
        }
    }
    
    setupEventListeners() {
        // Ablak resize esem√©ny
        window.addEventListener('resize', () => {
            if (window.gameEngine) {
                window.gameEngine.redrawTransformation();
            }
        });
        
        // Billenty≈±zet esem√©nyek
        document.addEventListener('keydown', (e) => {
            this.handleKeyboardShortcuts(e);
        });
        
        // Oldal elhagy√°sa el≈ëtti figyelmeztet√©s ha van akt√≠v j√°t√©k
        window.addEventListener('beforeunload', (e) => {
            if (window.gameEngine && window.gameEngine.gameActive) {
                e.preventDefault();
                e.returnValue = 'Biztosan el szeretn√©d hagyni az oldalt? A folyamatban l√©v≈ë j√°t√©k elv√©sz.';
                return e.returnValue;
            }
        });
    }
    
    handleKeyboardShortcuts(e) {
        // CTRL/CMD + billenty≈± kombin√°ci√≥k
        if (e.ctrlKey || e.metaKey) {
            switch(e.key.toLowerCase()) {
                case 'r': // Restart/Clear
                    e.preventDefault();
                    if (window.gameEngine) {
                        window.gameEngine.clearCanvas();
                    }
                    break;
                case 's': // Start
                    e.preventDefault();
                    if (window.gameEngine && !window.gameEngine.gameActive) {
                        window.gameEngine.startDrawing();
                    }
                    break;
                case 'h': // Help
                    e.preventDefault();
                    this.showInstructions();
                    break;
                case 'e': // Export scores
                    e.preventDefault();
                    LeaderboardManager.exportLeaderboard();
                    break;
            }
        }
        
        // Egyedi billenty≈±k
        switch(e.key) {
            case 'Escape':
                // J√°t√©k megszak√≠t√°sa
                if (window.gameEngine && window.gameEngine.gameActive) {
                    window.gameEngine.clearCanvas();
                }
                break;
            case 'F1':
                e.preventDefault();
                this.showInstructions();
                break;
        }
    }
    
    initializeUI() {
        // Audio toggle gomb hozz√°ad√°sa (opcion√°lis)
        this.addAudioToggleButton();
        
        // T√©ma v√°lt√≥ gomb hozz√°ad√°sa (opcion√°lis)
        this.addThemeToggleButton();
        
        // Fejlett funkci√≥k gomb hozz√°ad√°sa
        this.addAdvancedFeaturesButton();
    }
    
    addAudioToggleButton() {
        const controls = document.querySelector('.controls');
        if (controls) {
            const audioBtn = document.createElement('button');
            audioBtn.innerHTML = 'üîä Hang';
            audioBtn.onclick = this.toggleAudio.bind(this);
            audioBtn.title = 'Hang be/ki kapcsol√°sa';
            controls.appendChild(audioBtn);
        }
    }
    
    addThemeToggleButton() {
        const controls = document.querySelector('.controls');
        if (controls) {
            const themeBtn = document.createElement('button');
            themeBtn.innerHTML = 'üåô T√©ma';
            themeBtn.onclick = this.toggleTheme.bind(this);
            themeBtn.title = 'S√∂t√©t/vil√°gos t√©ma v√°lt√°sa';
            controls.appendChild(themeBtn);
        }
    }
    
    addAdvancedFeaturesButton() {
        const controls = document.querySelector('.controls');
        if (controls) {
            const advancedBtn = document.createElement('button');
            advancedBtn.innerHTML = '‚öôÔ∏è Fejlett';
            advancedBtn.onclick = this.showAdvancedFeatures.bind(this);
            advancedBtn.title = 'Fejlett funkci√≥k';
            controls.appendChild(advancedBtn);
        }
    }
    
    toggleAudio() {
        const isEnabled = AudioManager.isEnabled();
        AudioManager.setEnabled(!isEnabled);
        
        const audioBtn = document.querySelector('button[title="Hang be/ki kapcsol√°sa"]');
        if (audioBtn) {
            audioBtn.innerHTML = isEnabled ? 'üîá Hang Ki' : 'üîä Hang Be';
        }
        
        // Teszt hang lej√°tsz√°sa ha bekapcsoljuk
        if (!isEnabled) {
            AudioManager.playSuccessSound();
        }
        
        alert(isEnabled ? 'Hang kikapcsolva üîá' : 'Hang bekapcsolva üîä');
    }
    
    toggleTheme() {
        const body = document.body;
        const isDark = body.classList.toggle('dark-theme');
        
        const themeBtn = document.querySelector('button[title="S√∂t√©t/vil√°gos t√©ma v√°lt√°sa"]');
        if (themeBtn) {
            themeBtn.innerHTML = isDark ? '‚òÄÔ∏è Vil√°gos' : 'üåô S√∂t√©t';
        }
        
        // T√©ma ment√©se
        localStorage.setItem('perfectcircle_theme', isDark ? 'dark' : 'light');
        
        alert(isDark ? 'S√∂t√©t t√©ma bekapcsolva üåô' : 'Vil√°gos t√©ma bekapcsolva ‚òÄÔ∏è');
    }
    
    showAdvancedFeatures() {
        const features = `
‚öôÔ∏è FEJLETT FUNKCI√ìK

üéÆ BILLENTY≈∞ PARANCSOK:
‚Ä¢ Ctrl+S: Rajzol√°s kezd√©se
‚Ä¢ Ctrl+R: T√∂rl√©s
‚Ä¢ Ctrl+H: Seg√≠ts√©g
‚Ä¢ Ctrl+E: Eredm√©nyek export√°l√°sa
‚Ä¢ Esc: J√°t√©k megszak√≠t√°sa
‚Ä¢ F1: Seg√≠ts√©g

üìä ADATKEZEL√âS:
‚Ä¢ Helyi eredm√©nyek export√°l√°sa/import√°l√°sa
‚Ä¢ L√°togat√°si statisztik√°k
‚Ä¢ T√©ma v√°lt√°s
‚Ä¢ Hang be/ki kapcsol√°sa

üîß HIBAKERES√âS:
‚Ä¢ Firebase kapcsolat ellen≈ërz√©se
‚Ä¢ Helyi adatok t√∂rl√©se
‚Ä¢ Konzol napl√≥k megtekint√©se

Szeretn√©d haszn√°lni ezeket a funkci√≥kat?
        `;
        
        if (confirm(features)) {
            this.showAdvancedMenu();
        }
    }
    
    showAdvancedMenu() {
        const action = prompt(`
V√°lassz egy m≈±veletet:

1 - Eredm√©nyek export√°l√°sa
2 - Eredm√©nyek import√°l√°sa  
3 - L√°togat√°si statisztik√°k
4 - Firebase st√°tusz
5 - Helyi adatok t√∂rl√©se
6 - Konzol megnyit√°sa
7 - Teljes√≠tm√©ny teszt

Add meg a sz√°m:
        `);
        
        switch(action) {
            case '1':
                this.exportScores();
                break;
            case '2':
                this.importScores();
                break;
            case '3':
                window.showVisitStats();
                break;
            case '4':
                window.showFirebaseInfo();
                break;
            case '5':
                this.clearAllData();
                break;
            case '6':
                alert('Nyomd meg F12-t a fejleszt≈ëi konzol megnyit√°s√°hoz!');
                break;
            case '7':
                this.runPerformanceTest();
                break;
            default:
                if (action !== null) {
                    alert('√ârv√©nytelen v√°laszt√°s!');
                }
        }
    }
    
    exportScores() {
        try {
            const data = ScoreManager.exportScores();
            const blob = new Blob([data], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            
            const a = document.createElement('a');
            a.href = url;
            a.download = `perfect-circle-eredmenyek-${new Date().toLocaleDateString('hu-HU')}.json`;
            a.click();
            
            URL.revokeObjectURL(url);
            alert('Eredm√©nyek export√°lva! ‚úÖ');
        } catch (error) {
            alert('Export hiba: ' + error.message);
        }
    }
    
    importScores() {
        const input = document.createElement('input');
        input.type = 'file';
        input.accept = '.json';
        
        input.onchange = (e) => {
            const file = e.target.files[0];
            if (!file) return;
            
            const reader = new FileReader();
            reader.onload = (e) => {
                try {
                    const result = ScoreManager.importScores(e.target.result);
                    if (result.success) {
                        alert(`‚úÖ Sikeres import!\n${result.imported} eredm√©ny import√°lva\n√ñsszesen: ${result.total} eredm√©ny`);
                        this.updateStats();
                        LeaderboardManager.refreshCurrentView();
                    } else {
                        alert(`‚ùå Import hiba: ${result.error}`);
                    }
                } catch (error) {
                    alert('F√°jl olvas√°si hiba: ' + error.message);
                }
            };
            reader.readAsText(file);
        };
        
        input.click();
    }
    
    clearAllData() {
        if (confirm('‚ö†Ô∏è FIGYELEM!\n\nEz t√∂rli az √ñSSZES helyi adatot:\n‚Ä¢ Eredm√©nyek\n‚Ä¢ J√°t√©kos n√©v\n‚Ä¢ Be√°ll√≠t√°sok\n‚Ä¢ L√°togat√°si sz√°ml√°l√≥\n\nBiztosan folytatod?')) {
            try {
                ScoreManager.clearScores();
                localStorage.removeItem('perfectcircle_playername');
                localStorage.removeItem('perfectcircle_theme');
                VisitorCounter.resetLocalCounter();
                
                this.updateStats();
                LeaderboardManager.refreshCurrentView();
                
                alert('‚úÖ Minden helyi adat t√∂r√∂lve!');
            } catch (error) {
                alert('T√∂rl√©si hiba: ' + error.message);
            }
        }
    }
    
    runPerformanceTest() {
        console.log('üöÄ Teljes√≠tm√©ny teszt ind√≠t√°sa...');
        
        const startTime = performance.now();
        
        // Dummy k√∂r gener√°l√°s √©s elemz√©s
        const testPoints = [];
        const centerX = 200;
        const centerY = 200;
        const radius = 100;
        
        for (let i = 0; i < 100; i++) {
            const angle = (i / 100) * Math.PI * 2;
            testPoints.push({
                x: centerX + Math.cos(angle) * radius + (Math.random() - 0.5) * 10,
                y: centerY + Math.sin(angle) * radius + (Math.random() - 0.5) * 10
            });
        }
        
        // Elemz√©s futtat√°sa
        const analysis = CircleAnalyzer.analyzeCircle(testPoints, 'easy');
        
        const endTime = performance.now();
        const duration = endTime - startTime;
        
        const result = `
üöÄ TELJES√çTM√âNY TESZT EREDM√âNY

‚è±Ô∏è Fut√°si id≈ë: ${duration.toFixed(2)}ms
üìä Pontsz√°m: ${analysis.totalScore}/100
üéØ Elemzett pontok: ${testPoints.length}
üíæ Mem√≥ria haszn√°lat: ${(performance.memory?.usedJSHeapSize / 1024 / 1024).toFixed(2) || 'N/A'} MB

${duration < 50 ? '‚úÖ Kiv√°l√≥ teljes√≠tm√©ny!' : 
  duration < 100 ? 'üëç J√≥ teljes√≠tm√©ny' : 
  '‚ö†Ô∏è Lass√∫ teljes√≠tm√©ny'}
        `;
        
        console.log(result);
        alert(result);
    }
    
    // Player name kezel√©s
    loadPlayerName() {
        const savedName = localStorage.getItem('perfectcircle_playername');
        if (savedName) {
            const nameInput = document.getElementById('playerName');
            if (nameInput) {
                nameInput.value = savedName;
            }
            this.playerName = savedName;
        }
    }
    
    savePlayerName() {
        const nameInput = document.getElementById('playerName');
        const name = nameInput ? nameInput.value.trim() : '';
        
        if (name.length === 0) {
            alert('K√©rlek add meg a neved!');
            return false;
        }
        
        if (name.length > 20) {
            alert('A n√©v maximum 20 karakter lehet!');
            return false;
        }
        
        localStorage.setItem('perfectcircle_playername', name);
        this.playerName = name;
        alert(`N√©v mentve: ${name} ‚úÖ`);
        return true;
    }
    
    getPlayerName() {
        const nameInput = document.getElementById('playerName');
        const name = nameInput ? nameInput.value.trim() : '';
        return name || this.playerName || 'N√©vtelen';
    }
    
    // Statisztik√°k friss√≠t√©se
    updateStats() {
        const stats = ScoreManager.getStats();
        
        const elements = {
            bestScore: document.getElementById('bestScore'),
            averageScore: document.getElementById('averageScore'),
            gamesPlayed: document.getElementById('gamesPlayed'),
            currentScore: document.getElementById('currentScore')
        };
        
        if (elements.bestScore) elements.bestScore.textContent = stats.best;
        if (elements.averageScore) elements.averageScore.textContent = stats.average;
        if (elements.gamesPlayed) elements.gamesPlayed.textContent = stats.games;
        if (elements.currentScore && stats.games === 0) elements.currentScore.textContent = '0';
    }
    
    // Instrukci√≥k megjelen√≠t√©se
    showInstructions() {
        const instructions = `
üéØ PERFECT CIRCLE - TELJES √öTMUTAT√ì

üìù J√ÅT√âK C√âLJA:
Rajzolj a lehet≈ë legt√∂k√©letesebb k√∂rt egyetlen mozdulattal!

üéÆ IR√ÅNY√çT√ÅS:
‚Ä¢ üñ±Ô∏è Eg√©r: Kattints √©s h√∫zd
‚Ä¢ üì± Mobil: √ârintsd √©s h√∫zd
‚Ä¢ ‚å®Ô∏è Billenty≈±k: Ctrl+S (start), Ctrl+R (t√∂rl√©s), Esc (stop)

üìä PONTOZ√ÅSI RENDSZER (max 100 pont):
‚Ä¢ üîµ K√∂ralak (40p): Mennyire kerek a form√°d
‚Ä¢ üîó Z√°r√≥d√°s (20p): Mennyire z√°rul be j√≥l a k√∂r
‚Ä¢ üìè Egyenletess√©g (25p): Mennyire egyenletes a vonalvastags√°g  
‚Ä¢ üìê M√©ret (15p): Megfelel≈ë m√©ret≈±-e a k√∂r

üéØ NEH√âZS√âGI SZINTEK:
‚Ä¢ üü¢ K√∂nny≈±: 50-150px sug√°r, stabil UI
‚Ä¢ üî¥ Neh√©z: 20-190px sug√°r + forg√≥ UI!

‚ú® VAR√ÅZSLATOS TRANSZFORM√ÅCI√ìK:
A k√∂r√∂d pontosan k√∂veti az alakodat √©s √°talakul:
‚Ä¢ ‚òÄÔ∏è Nap ‚Ä¢ üçï Pizza ‚Ä¢ üç© Donut ‚Ä¢ üåô Hold
‚Ä¢ üåç F√∂ldg√∂mb ‚Ä¢ ‚öΩ Labda ‚Ä¢ üïê √ìra ‚Ä¢ üå∏ Vir√°g
‚Ä¢ üòä Emoji ‚Ä¢ üç™ Keksz

üåç GLOB√ÅLIS RANGLISTA:
‚Ä¢ üë§ Add meg a neved a glob√°lis versenyhez!
‚Ä¢ üèÜ Versenyezz j√°t√©kosokkal vil√°gszerte!
‚Ä¢ üìä Firebase st√°tusz: jobb fels≈ë sarokban
‚Ä¢ üì¥ Offline m√≥dban is j√°tszhatsz!

üëÅÔ∏è L√ÅTOGAT√ÅSSZ√ÅML√ÅL√ì:
‚Ä¢ üì± Helyi √©s üåç glob√°lis l√°togat√°sok k√∂vet√©se
‚Ä¢ üñ±Ô∏è Kattints a sz√°ml√°l√≥ra r√©szletes statisztik√°k√©rt!

üéâ √úNNEPL√âSI EFFEKTEK:
‚Ä¢ 95+ pont: üéä Konfetti + üéÜ T≈±zij√°t√©k + üéµ Fanf√°r
‚Ä¢ 85+ pont: üéä Konfetti + üéÜ T≈±zij√°t√©k + üéµ Gy≈ëzelmi dallam  
‚Ä¢ 70+ pont: üéä Konfetti + üîä Siker hang

‚öôÔ∏è FEJLETT FUNKCI√ìK:
‚Ä¢ üì§ Eredm√©nyek export√°l√°sa/import√°l√°sa
‚Ä¢ üîä Hang be/ki kapcsol√°sa
‚Ä¢ üåô S√∂t√©t/vil√°gos t√©ma v√°lt√°s
‚Ä¢ ‚å®Ô∏è Billenty≈± parancsok
‚Ä¢ üìä Teljes√≠tm√©ny teszt

üí° PROFI TIPPEK:
‚Ä¢ üêå Lassan √©s egyenletesen rajzolj
‚Ä¢ üîÑ Pr√≥b√°ld meg egy mozdulattal befejezni
‚Ä¢ üìè Tartsd egyenletesen a t√°vols√°got a k√∂z√©ppontt√≥l
‚Ä¢ üéØ Z√°rd be pontosan ugyanott ahol kezdted
‚Ä¢ üí™ Gyakorolj mindk√©t neh√©zs√©gi szinten!

üèÜ PONTOZ√ÅSI TIPPEK:
‚Ä¢ K√∂ralak: Ker√ºld a sz√∂gletes r√©szeket
‚Ä¢ Z√°r√≥d√°s: Fejezd be pontosan a kezd≈ëpontn√°l
‚Ä¢ Egyenletess√©g: Tartsd √°lland√≥ sebess√©ggel
‚Ä¢ M√©ret: Figyelj a neh√©zs√©gi szint korl√°taira

üîß HIBAELH√ÅR√çT√ÅS:
‚Ä¢ Firebase offline: Ellen≈ërizd a Firestore Rules-t
‚Ä¢ Lass√∫ teljes√≠tm√©ny: Pr√≥b√°ld ki a teljes√≠tm√©ny tesztet
‚Ä¢ Hang probl√©m√°k: Kapcsold be/ki a hangot

Sok sikert a t√∂k√©letes k√∂r rajzol√°s√°hoz! üçÄ‚ú®
        `;
        
        alert(instructions);
    }
}

// Glob√°lis alkalmaz√°s p√©ld√°ny
window.perfectCircleApp = new PerfectCircleApp();

// Glob√°lis f√ºggv√©nyek a HTML-b≈ël val√≥ h√≠v√°shoz
window.savePlayerName = () => window.perfectCircleApp.savePlayerName();
window.getPlayerName = () => window.perfectCircleApp.getPlayerName();
window.showInstructions = () => window.perfectCircleApp.showInstructions();
window.clearAllScores = () => window.perfectCircleApp.clearAllData();
window.updateStats = () => window.perfectCircleApp.updateStats();

// Score megjelen√≠t≈ë f√ºggv√©ny
window.showScore = async (score, analysis, transformationName = '') => {
    // UI friss√≠t√©s
    const elements = {
        currentScore: document.getElementById('currentScore'),
        finalScore: document.getElementById('finalScore'),
        scoreTitle: document.getElementById('scoreTitle'),
        scoreBreakdown: document.getElementById('scoreBreakdown')
    };
    
    if (elements.currentScore) elements.currentScore.textContent = Math.round(score);
    if (elements.finalScore) elements.finalScore.textContent = Math.round(score);
    
    // C√≠m be√°ll√≠t√°sa
    let title = '';
    if (score >= 95) title = 'üèÜ T√∂k√©letes! Zseni√°lis!';
    else if (score >= 85) title = 'üåü Kiv√°l√≥! Nagyon j√≥!';
    else if (score >= 70) title = 'üëç J√≥ munka!';
    else if (score >= 50) title = 'üëå Nem rossz!';
    else title = 'üí™ Pr√≥b√°ld √∫jra!';
    
    if (elements.scoreTitle) elements.scoreTitle.textContent = title;

    // R√©szletes pontsz√°m megjelen√≠t√©se
    if (!analysis.error && elements.scoreBreakdown) {
        elements.scoreBreakdown.innerHTML = `
            <div class="breakdown-item">
                <strong>K√∂ralak</strong><br>
                ${analysis.shapeScore}/40 pont
            </div>
            <div class="breakdown-item">
                <strong>Z√°r√≥d√°s</strong><br>
                ${analysis.closureScore}/20 pont
            </div>
            <div class="breakdown-item">
                <strong>Egyenletess√©g</strong><br>
                ${analysis.smoothnessScore}/25 pont
            </div>
            <div class="breakdown-item">
                <strong>M√©ret</strong><br>
                ${analysis.sizeScore}/15 pont
            </div>
            ${transformationName ? `<div class="breakdown-item" style="grid-column: 1/-1; background: rgba(255,215,0,0.3);"><strong>‚ú® Transzform√°ci√≥: ${transformationName}!</strong></div>` : ''}
        `;
    } else if (analysis.error && elements.scoreBreakdown) {
        elements.scoreBreakdown.innerHTML = `
            <div style="color: #ff6b6b; font-weight: bold;">${analysis.error}</div>
        `;
    }

    // Score display megjelen√≠t√©se
    EffectsManager.showScoreAnimation();

    if (!analysis.error && score > 0) {
        setTimeout(() => {
            EffectsManager.celebrateScore(score);
            AudioManager.playCheerSound(score);
        }, 500);
        
        // Helyi ment√©s
        const savedScore = ScoreManager.saveScore(score, analysis, window.gameEngine.getDifficulty(), transformationName);
        window.perfectCircleApp.updateStats();
        
        // Glob√°lis ment√©s megk√≠s√©rl√©se
        const playerName = window.perfectCircleApp.getPlayerName();
        if (playerName !== 'N√©vtelen' && window.firebaseAPI && window.firebaseAPI.isReady()) {
            try {
                await LeaderboardManager.saveGlobalScore(playerName, Math.round(score), window.gameEngine.getDifficulty(), transformationName);
                console.log('‚úÖ Pontsz√°m mentve glob√°lisan!');
                
                if (LeaderboardManager.getCurrentView() === 'global') {
                    setTimeout(() => LeaderboardManager.loadGlobalLeaderboard(), 1000);
                }
            } catch (error) {
                console.warn('‚ùå Glob√°lis ment√©s sikertelen:', error);
            }
        } else if (playerName !== 'N√©vtelen') {
            console.log('üì¥ Firebase offline - glob√°lis ment√©s kihagyva');
        }
        
        // Leaderboard friss√≠t√©se
        if (LeaderboardManager.getCurrentView() === 'local') {
            LeaderboardManager.loadLocalLeaderboard(savedScore?.id);
        }
    }
};

// Alkalmaz√°s ind√≠t√°sa amikor a DOM bet√∂lt≈ëd√∂tt
document.addEventListener('DOMContentLoaded', () => {
    window.perfectCircleApp.init();
});

// T√©ma bet√∂lt√©se
document.addEventListener('DOMContentLoaded', () => {
    const savedTheme = localStorage.getItem('perfectcircle_theme');
    if (savedTheme === 'dark') {
        document.body.classList.add('dark-theme');
    }
});
